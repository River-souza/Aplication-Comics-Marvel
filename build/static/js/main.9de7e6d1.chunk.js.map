{"version":3,"sources":["globalRedux/reducer.js","pages/home/reducer.js","pages/charDetails/reducer.js","reducers/index.js","globalRedux/types.js","pages/home/types.js","pages/charDetails/types.js","functions/createStore.js","functions/httpRequest.js","pages/home/actions.js","pages/home/components/footer.js","pages/home/components/search.js","components/comicThumbnail.js","components/button.js","pages/home/index.js","pages/charDetails/index.js","routes.js","consts/routePaths.js","components/loader.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","loading","comics","chars","characters","series","character","combineReducers","global","state","arguments","length","undefined","type","Object","objectSpread","home","action","payload","charDetails","createStore","reducers","composeWithDevTools","applyMiddleware","ReduxThunk","request","urlApi","param","get","HttpRequest","instance","store","dispatch","result","this","dealWithError","_context","t0","axios","create","baseURL","params","apikey","limit","timeout","method","responseType","HttpGet","_ref","asyncToGenerator","regenerator_default","a","mark","_callee2","_args2","wrap","_context2","prev","next","Get","abrupt","sent","stop","_x2","apply","findComics","char","characterId","parseInt","id","then","status","data","results","catch","error","console","log","Component","SearchChar","_this","react_default","createElement","Fragment","Autocomplete_default","items","props","inputProps","shouldItemRender","item","value","name","toLowerCase","indexOf","getItemValue","wrapperStyle","position","display","renderMenu","children","className","renderItem","isHighlighted","concat","key","renderInput","onSubmit","event","preventDefault","assign","placeholder","alt","src","search","onChange","ev","autoCompleteOnChange","target","onSelect","itemSelect","onSelectItem","connect","ComicThumbnail","_ref$id","_ref$title","url","title","_ref$thumbnail","thumbnail","_ref$description","description","_ref$writer","writer","_ref$penciller","penciller","_ref$published","published","onClick","e","alert","Button","_ref$url","text","href","Home","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","autoCompletTimeout","clearTimeout","setTimeout","findHeroes","String","itensSelected","count","onButtonClick","bind","assertThisInitialized","map","comicThumbnail","toString","urls","path","extension","creators","dates","date","components_button","clearHeroes","searchString","CharDetails","Routes","BrowserRouter","Switch","Route","exact","component","React","Loading","App","es","WrapperEl","routes","Wrapper","loader","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9de7e6d1.chunk.js","sourcesContent":["/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 25/04/2021.\n    Change on : 01/05/2021.\n    Author     : Michael Dydean\n*/\nimport { ON_LOADING, ON_LOADED } from './types';\n\nconst INITIAL_STATE = {\n    loading: false\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case ON_LOADING:\n            return { ...state, loading: true };\n        case ON_LOADED:\n            return { ...state, loading: false };\n        default:\n            return state;\n    }\n};","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 25/04/2021.\n    Change on : 02/05/2021.\n    Author     : Michael Dydean\n*/\nimport { ON_MARVEL_CHAR_CHANGED, ON_MARVEL_CHARS_LOADED } from './types';\n\nconst INITIAL_STATE = {\n  comics: null,\n  chars: [],\n  characters: null,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ON_MARVEL_CHAR_CHANGED:\n      return {\n        ...state,\n        comics: action.payload,\n        chars: [],\n      };\n    case ON_MARVEL_CHARS_LOADED:\n      return {\n        ...state,\n        chars: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 25/04/2021.\n    Change on : 01/05/2021.\n    Author     : Michael Dydean\n*/\nimport { ON_MARVEL_HERO_SERIE_LOADED } from './types';\n\nconst INITIAL_STATE = {\n  series: null,\n  character: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n            case ON_MARVEL_HERO_SERIE_LOADED:\n            return {\n                ...state,\n                series: action.payload.series,\n                character: action.payload.character\n            };\n        default:\n            return state;\n    }\n};","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 25/04/2021.\n    Change on : 03/05/2021.\n    Author     : Michael Dydean\n*/\nimport { combineReducers } from 'redux';\nimport globalReducer from '../globalRedux/reducer';\nimport homeReducer from '../pages/home/reducer';\nimport charReducer from '../pages/charDetails/reducer';\n\nexport default combineReducers({\n  global: globalReducer,\n  home: homeReducer,\n  charDetails: charReducer\n});\n","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 29/04/2021.\n    Change on : 01/05/2021.\n    Author     : Michael Dydean\n*/\nexport const ON_LOADING = 'on_loading';\nexport const ON_LOADED = 'on_loaded';","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 29/04/2021.\n    Change on : 02/05/2021.\n    Author     : Michael Dydean\n*/\nexport const ON_MARVEL_CHAR_CHANGED = 'on_marvel_char_changed';\nexport const ON_MARVEL_CHAR_NOT_FOUND_CHANGED = 'on_marvel_char_not_found_changed';\nexport const ON_MARVEL_CHARS_LOADED = 'on_marvel_chars_loaded';\nexport const ON_MARVEL_ERROR = 'on_marvel_error';\n","/* \r\n    Name do Projeto : Aplication Comics Marvel\r\n    Created on : 25/04/2021.\r\n    Change on : 29/04/2021.\r\n    Author     : Michael Dydean\r\n*/\r\nexport const ON_MARVEL_HERO_SERIE_LOADED = 'on_marvel_hero_serie_loaded';","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 01/05/2021.\n    Change on : 02/05/2021.\n    Author     : Michael Dydean\n*/\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducers from '../reducers';\nimport ReduxThunk from 'redux-thunk';\n\nexport default createStore(reducers, composeWithDevTools(applyMiddleware(ReduxThunk)));","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 23/04/2021.\n    Change on : 03/05/2021.\n    Author     : Michael Dydean\n*/\nimport axios from 'axios';\nimport store from './createStore';\nimport { ON_LOADING, ON_LOADED } from '../globalRedux/types';\n\nclass HttpRequest {\n    static instance() {\n        const instance = axios.create({\n            baseURL: 'https://gateway.marvel.com',\n            params: {//licença de utilização de consumo da API Marvel\n                \"apikey\": \"7e9fee8c0203322e32138d4f01b77b36\",\n                \"limit\": \"100\"\n            },\n            timeout: 10000,\n            method: 'get',\n            responseType: 'json'\n        });\n        return instance;\n\n    }\n    async Get(urlApi, param = {}) {\n        try {\n            const get = HttpRequest.instance().get(urlApi, param);\n            store.dispatch({ type: ON_LOADING });\n            const result = await get;\n            store.dispatch({ type: ON_LOADED });\n            return result;\n        } catch (error) {\n            store.dispatch({ type: ON_LOADED });\n            this.dealWithError(error);\n        }\n    }\n}\n\nvar request = new HttpRequest();\nexport const HttpGet = async (urlApi, param = {}) => {\n    return await request.Get(urlApi, param);\n};\n","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 24/04/2021.\n    Change on : 04/05/2021.\n    Author     : Michael Dydean\n*/\nimport { ON_MARVEL_CHAR_CHANGED, ON_MARVEL_CHARS_LOADED } from './types';\nimport { HttpGet } from \"../../functions/httpRequest\";\n\nexport const findHeroes = (searchString) => {\n    return dispatch => {\n        HttpGet('/v1/public/characters?nameStartsWith=' + searchString)\n            .then(result => {\n                if (result.status === 200) {\n                    dispatch({\n                        type: ON_MARVEL_CHARS_LOADED,\n                        payload: result.data.data.results\n                    });\n                }\n            })\n            .catch(error => console.log(error));\n    };\n};\n\nexport const clearHeroes = () => {\n    return {\n        type: ON_MARVEL_CHARS_LOADED,\n        payload: []\n    };\n};\n\nexport const findComics = (char) => {\n    return dispatch => {\n        if (char.length) {\n            var characterId;\n            if (typeof char === \"string\") {\n                characterId = parseInt(char)\n            } else {\n                characterId = char[0].id;\n            }\n            HttpGet('/v1/public/characters/' + characterId + '/comics?hasDigitalIssue=true')\n                .then(result => {\n                    if (result.status === 200 && result.data.data.results.length >= 1) {\n                        dispatch({\n                            type: ON_MARVEL_CHAR_CHANGED,\n                            payload: result.data.data.results\n                        });\n                    }\n                })\n                .catch((error) => {\n                    dispatch(console.log(error));\n                });\n        };\n    }\n};","/* \r\n    Name do Projeto : Aplication Comics Marvel\r\n    Created on : 01/05/2021.\r\n    Change on : 01/05/2021.\r\n    Author     : Michael Dydean\r\n*/\r\nimport React, { Component } from \"react\";\r\n\r\nclass FooterHome extends Component {\r\n\r\nrender() {\r\n        return (\r\n             <React.Fragment style={{position: \"fixed\", bottom:3, background: \"black\"}}>\r\n            <hr/>\r\n               <div>\r\n                 <p style={{color: \"white\", textAlign: \"center\"}}>Desafio Front-End | API da Marvel e Google Maps | 2021 by Michael Dydean</p>\r\n               </div>\r\n             </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterHome;","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 30/04/2021.\n    Change on : 01/05/2021.\n    Author     : Michael Dydean\n*/\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { findComics } from '../actions';\nimport Autocomplete from 'react-autocomplete';\n\nclass SearchChar extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Autocomplete\n                    items={this.props.chars}\n                    inputProps={{ id: 'states-autocomplete' }}\n                    shouldItemRender={(item, value) => item.name.toLowerCase().indexOf(value.toLowerCase()) > -1}\n                    getItemValue={item => item.name}\n                    wrapperStyle={{ position: 'relative', display: 'block' }}\n                    renderMenu={children => (\n                        <div className=\"result-autocomplete\">\n                           {children}\n                        </div>\n                    )}\n                    renderItem={(item, isHighlighted) => (\n                        <div\n                            className={`option item ${isHighlighted ? 'option item-highlighted' : ''}`}\n                            key={item.id}\n                        >\n                           {item.name}\n                        </div>\n                    )}\n                    renderInput={(props) => (\n                        <React.Fragment>\n                            <form className=\"wrapper-search\"\n                                onSubmit={(event) => { event.preventDefault(); this.props.findComics(this.props.char) }}>\n                                <input {...props} placeholder=\"Search your hero's comics\" />\n                                <button className=\"go\" type=\"submit\" name=\"search\">\n                                    <img alt=\"Lupa\" src=\"data:image/svg+xml;utf8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTguMS4xLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiBpZD0iQ2FwYV8xIiB4PSIwcHgiIHk9IjBweCIgdmlld0JveD0iMCAwIDI1MC4zMTMgMjUwLjMxMyIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgMjUwLjMxMyAyNTAuMzEzOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSIgd2lkdGg9IjE2cHgiIGhlaWdodD0iMTZweCI+CjxnIGlkPSJTZWFyY2giPgoJPHBhdGggc3R5bGU9ImZpbGwtcnVsZTpldmVub2RkO2NsaXAtcnVsZTpldmVub2RkOyIgZD0iTTI0NC4xODYsMjE0LjYwNGwtNTQuMzc5LTU0LjM3OGMtMC4yODktMC4yODktMC42MjgtMC40OTEtMC45My0wLjc2ICAgYzEwLjctMTYuMjMxLDE2Ljk0NS0zNS42NiwxNi45NDUtNTYuNTU0QzIwNS44MjIsNDYuMDc1LDE1OS43NDcsMCwxMDIuOTExLDBTMCw0Ni4wNzUsMCwxMDIuOTExICAgYzAsNTYuODM1LDQ2LjA3NCwxMDIuOTExLDEwMi45MSwxMDIuOTExYzIwLjg5NSwwLDQwLjMyMy02LjI0NSw1Ni41NTQtMTYuOTQ1YzAuMjY5LDAuMzAxLDAuNDcsMC42NCwwLjc1OSwwLjkyOWw1NC4zOCw1NC4zOCAgIGM4LjE2OSw4LjE2OCwyMS40MTMsOC4xNjgsMjkuNTgzLDBDMjUyLjM1NCwyMzYuMDE3LDI1Mi4zNTQsMjIyLjc3MywyNDQuMTg2LDIxNC42MDR6IE0xMDIuOTExLDE3MC4xNDYgICBjLTM3LjEzNCwwLTY3LjIzNi0zMC4xMDItNjcuMjM2LTY3LjIzNWMwLTM3LjEzNCwzMC4xMDMtNjcuMjM2LDY3LjIzNi02Ny4yMzZjMzcuMTMyLDAsNjcuMjM1LDMwLjEwMyw2Ny4yMzUsNjcuMjM2ICAgQzE3MC4xNDYsMTQwLjA0NCwxNDAuMDQzLDE3MC4xNDYsMTAyLjkxMSwxNzAuMTQ2eiIgZmlsbD0iI2NjY2NjYyIvPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+Cjwvc3ZnPgo=\" />\n                                </button>\n                            </form>\n                        </React.Fragment>\n                    )}\n                    value={this.props.search}\n                    onChange={(ev) => { this.props.autoCompleteOnChange(ev.target.value) }}\n                    onSelect={(value, itemSelect) =>{this.props.onSelectItem(value, itemSelect.id)}}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        chars: state.home.chars\n    };\n};\n\nexport default connect(mapStateToProps, {\n    findComics\n})(SearchChar);","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 26/04/2021.\n    Change on : 04/05/2021.\n    Author     : Michael Dydean\n*/\nimport React from 'react';\n\nconst ComicThumbnail = ({ id='', url='', title='', thumbnail='', description='', writer='', penciller='', published='' }) => (\n  <React.Fragment>\n        <div id={id} className=\"thumbnail wrapper\" onClick={(e) => {\n      \n           alert('\\nTitle : ' + title + '\\n\\nDescription' + description + '\\n\\nWriter : ' + writer + '\\n\\nPenciller : ' + penciller + '\\n\\nPublished : ' + published);\n             }}>\n            <img className=\"thumbnail-img\" src={thumbnail} alt={thumbnail}/>\n            <div className=\"thumbnail-overlay\"><span className=\"thumbnail-text\">{title}</span>\n            </div>\n        </div>\n    \n    </React.Fragment>\n);\n\nexport default ComicThumbnail;\n","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 30/04/2021.\n    Change on : 03/05/2021.\n    Author     : Michael Dydean\n*/\nimport React from 'react';\n\nconst Button = ({url='', onClick, text}) => (\n    <a href={url}\n className=\"return\" onClick={onClick}>\n        {text}\n    </a>\n);\n\nexport default Button;","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 23/04/2021.\n    Change on : 04/05/2021.\n    Author     : Michael Dydean\n*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { clearHeroes, findHeroes, findComics } from './actions';\nimport FooterHome from './components/footer';\nimport SearchChar from './components/search';\nimport ComicThumbnail from '../../components/comicThumbnail';\nimport Button from '../../components/button';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n      autoCompletTimeout: null,\n      itensSelected: [],\n      count: 0,\n    };\n    this.onButtonClick = this.onButtonClick.bind(this);\n\n  }\n\n  autoCompleteOnChange = (value) => {\n    this.setState({ search: value });\n    if (value.length > 1) {\n      if (this.state.autoCompletTimeout) {\n        clearTimeout(this.state.autoCompletTimeout);\n      }\n      const timeout = setTimeout(() => {\n        this.setState({ autoCompletTimeout: null });\n        this.props.findHeroes(value);\n      }, 300);\n      this.setState({ autoCompletTimeout: timeout });\n    }\n  }\n\n  onButtonClick() {//Método utilizado caso haja a necessidade da função de buscar um comics de acordo com seu id\n    this.props.findComics('1011334');//procura comics pelo id\n  }\n\n  onSelectItem = (value, itemSelect) => {\n    this.setState({ search: value });\n    this.props.findComics(String(itemSelect));\n  }\n\n  render() {\n    return (\n      <main>\n        <div className=\"container\">\n          <SearchChar\n            char={this.props.chars}\n            search={this.state.search}\n            autoCompleteOnChange={this.autoCompleteOnChange}\n            onSelectItem={this.onSelectItem}\n          />\n          <div className=\"content\">\n            {this.props.comics ?\n            <section>\n              <section className=\"wrapper-comics\">\n                {\n        /* this.props.comics.forEach(async function (element, index, array) {\n        \n        if(index < 10) {\n           console.log(\"this.state.count\");\n           }\n        }),*/\n                this.props.comics.map(item => \n                     <React.Fragment key={item.id}>\n                      <ComicThumbnail\n                        id={item.id.toString()}\n                        url={item.urls[0].url}\n                        title={item.title}\n                        thumbnail={item.thumbnail.path + '.' + item.thumbnail.extension}\n                        description={item.description}\n                        writer={item.creators.items[0].name === 'undefined' ?'':item.creators.items[0].name.toString()}\n                        penciller={item.creators.items[0].name.toString()}\n                        published={item.dates[0].date}\n                      >\n                      </ComicThumbnail>\n                    </React.Fragment>\n                  )\n                }\n                //}\n                </section>\n                <Button url={\"/\"} onClick={null} text={\"Voltar\"}></Button>\n                <Button url={\"\"} onClick={(e) => {\n                 \n                \n                  /*\n                 codigo para verificar os itens selecionados\n                 para abrir o modal com o mapa\n                 */\n                 }} text={\"Enviar-me\"}></Button>\n                 </section>\n                   :\n                 <section className=\"wrapper-call\">\n                   <h1>VEJA OS GIBIS DA MARVEL AQUI!</h1>\n                   <h2>Digite o nome do super-herói ou título no campo de pesquisa acima. </h2>\n                 </section>\n               }\n          </div>\n        </div>\n      </main >\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  characters: state.home.characters,\n  comics: state.home.comics,\n  chars: state.home.chars\n});\n\nexport default connect(mapStateToProps, {\n  clearHeroes,\n  findHeroes,\n  findComics\n})(Home);\n","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 24/04/2021.\n    Change on : 01/05/2021.\n    Author     : Michael Dydean\n*/\nimport React, { Component } from \"react\";\n\nclass CharDetails extends Component {\n    render() {\n        return (\n            <main>\n              \n            </main>\n        );\n    }\n}\n\nexport default CharDetails;","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 24/04/2021.\n    Change on : 30/04/2021.\n    Author     : Michael Dydean\n*/\nimport React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { ROOT, CHARDETAILS } from './consts/routePaths';\nimport Home from './pages/home';\nimport charDetails from './pages/charDetails';\n\nclass Routes extends React.Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path={ROOT} exact={true} component={Home} />\n                    <Route path={CHARDETAILS} component={charDetails} />\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\nexport default Routes;","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 25/04/2021.\n    Change on : 01/05/2021.\n    Author     : Michael Dydean\n*/\nexport const ROOT = '/';\nexport const CHARDETAILS = '/charDetails';","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 24/04/2021.\n    Change on : 01/05/2021.\n    Author     : Michael Dydean\n*/\nimport React from 'react';\n\nconst Loading = () => (\n    <div id=\"loaderBar\">\n        <div id=\"bar\"></div>\n    </div>\n);\n\nexport default Loading;","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 22/04/2021.\n    Change on : 04/05/2021.\n    Author     : Michael Dydean\n*/\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './functions/createStore';\nimport Routes from './routes';\nimport Loader from './components/loader';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider\n        store={store}>\n        <WrapperEl>\n          <Routes />\n        </WrapperEl>\n      </Provider>\n    );\n  }\n}\n\nclass Wrapper extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.children}\n        {this.props.loading && <Loader />}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { loading: state.global.loading };\n};\n\nconst WrapperEl = connect(mapStateToProps)(Wrapper);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 22/04/2021.\n    Change on : 02/05/2021.\n    Author     : Michael Dydean\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}