{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\src\\\\pages\\\\home\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { clearHeroes, findHeroes, findComics } from './actions';\nimport SearchChar from './components/search';\nimport ComicThumbnail from '../../components/comicThumbnail';\nimport Button from '../../components/button';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _this.autoCompleteOnChange = function (value) {\n      _this.setState({\n        search: value\n      });\n\n      if (value.length > 2) {\n        if (_this.state.autoCompletTimeout) {\n          clearTimeout(_this.state.autoCompletTimeout);\n        }\n\n        var timeout = setTimeout(function () {\n          _this.setState({\n            autoCompletTimeout: null\n          });\n\n          _this.props.findHeroes(value);\n        }, 300);\n\n        _this.setState({\n          autoCompletTimeout: timeout\n        });\n      }\n    };\n\n    _this.onSelectItem = function (value, itemSelect) {\n      _this.setState({\n        search: value\n      });\n\n      _this.props.findComics(String(itemSelect));\n    };\n\n    _this.state = {\n      search: '',\n      autoCompletTimeout: null\n    };\n    _this.onButtonClick = _this.onButtonClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"onButtonClick\",\n    value: function onButtonClick() {\n      //Método utilizado caso haja a necessidade da função de buscar um comics de acordo com seu id\n      this.props.findComics('1011334'); //procura comics pelo id\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(SearchChar, {\n        char: this.props.chars,\n        search: this.state.search,\n        autoCompleteOnChange: this.autoCompleteOnChange,\n        onSelectItem: this.onSelectItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.props.comics ? React.createElement(\"section\", {\n        className: \"wrapper-comics\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, (console.log(this.props.comics), this.props.comics.map(function (item) {\n        return React.createElement(React.Fragment, {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(ComicThumbnail, {\n          url: item.urls[0].url,\n          title: item.title,\n          thumbnail: item.thumbnail.path + '.' + item.thumbnail.extension,\n          description: item.description,\n          writer: item.creators.items[0].name === 'undefined' ? item.creators.items[1].name : '',\n          penciller: item.creators.items[1].name === 'undefined' ? item.creators.items[1].name : '',\n          published: item.dates[0].date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }));\n      }))) : React.createElement(\"section\", {\n        className: \"wrapper-call\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"FIND THE COMICS OF YOUR FAVORITE SUPERHERO\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"typing the name of hero or clicking in start now to show them aleatoring\")))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    characters: state.home.characters,\n    comics: state.home.comics,\n    chars: state.home.chars\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearHeroes: clearHeroes,\n  findHeroes: findHeroes,\n  findComics: findComics\n})(Home);","map":{"version":3,"sources":["C:\\Users\\maico\\Marvel-API-development\\src\\pages\\home\\index.js"],"names":["React","Component","connect","clearHeroes","findHeroes","findComics","SearchChar","ComicThumbnail","Button","Home","props","autoCompleteOnChange","value","setState","search","length","state","autoCompletTimeout","clearTimeout","timeout","setTimeout","onSelectItem","itemSelect","String","onButtonClick","bind","chars","comics","console","log","map","item","id","urls","url","title","thumbnail","path","extension","description","creators","items","name","dates","date","mapStateToProps","characters","home"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,UAAlC,QAAoD,WAApD;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;;AADiB,UAUnBC,oBAVmB,GAUI,UAACC,KAAD,EAAW;AAChC,YAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEF;AAAV,OAAd;;AACA,UAAIA,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AACpB,YAAI,MAAKC,KAAL,CAAWC,kBAAf,EAAmC;AACjCC,UAAAA,YAAY,CAAC,MAAKF,KAAL,CAAWC,kBAAZ,CAAZ;AACD;;AACD,YAAME,OAAO,GAAGC,UAAU,CAAC,YAAM;AAC/B,gBAAKP,QAAL,CAAc;AAAEI,YAAAA,kBAAkB,EAAE;AAAtB,WAAd;;AACA,gBAAKP,KAAL,CAAWN,UAAX,CAAsBQ,KAAtB;AACD,SAHyB,EAGvB,GAHuB,CAA1B;;AAIA,cAAKC,QAAL,CAAc;AAAEI,UAAAA,kBAAkB,EAAEE;AAAtB,SAAd;AACD;AACF,KAtBkB;;AAAA,UA4BnBE,YA5BmB,GA4BJ,UAACT,KAAD,EAAQU,UAAR,EAAuB;AACpC,YAAKT,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEF;AAAV,OAAd;;AACA,YAAKF,KAAL,CAAWL,UAAX,CAAsBkB,MAAM,CAACD,UAAD,CAA5B;AACD,KA/BkB;;AAEjB,UAAKN,KAAL,GAAa;AACXF,MAAAA,MAAM,EAAE,EADG;AAEXG,MAAAA,kBAAkB,EAAE;AAFT,KAAb;AAIA,UAAKO,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,uDAArB;AANiB;AAQlB;;;;oCAgBe;AAAC;AACf,WAAKf,KAAL,CAAWL,UAAX,CAAsB,SAAtB,EADc,CACmB;AAClC;;;6BAOQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAE,KAAKK,KAAL,CAAWgB,KADnB;AAEE,QAAA,MAAM,EAAE,KAAKV,KAAL,CAAWF,MAFrB;AAGE,QAAA,oBAAoB,EAAE,KAAKH,oBAH7B;AAIE,QAAA,YAAY,EAAE,KAAKU,YAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKX,KAAL,CAAWiB,MAAX,GACC;AAAS,QAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAENC,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWiB,MAAvB,GACU,KAAKjB,KAAL,CAAWiB,MAAX,CAAkBG,GAAlB,CAAsB,UAAAC,IAAI;AAAA,eACxB,oBAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,cAAD;AACE,UAAA,GAAG,EAAED,IAAI,CAACE,IAAL,CAAU,CAAV,EAAaC,GADpB;AAEE,UAAA,KAAK,EAAEH,IAAI,CAACI,KAFd;AAGE,UAAA,SAAS,EAAEJ,IAAI,CAACK,SAAL,CAAeC,IAAf,GAAsB,GAAtB,GAA4BN,IAAI,CAACK,SAAL,CAAeE,SAHxD;AAIE,UAAA,WAAW,EAAEP,IAAI,CAACQ,WAJpB;AAKE,UAAA,MAAM,EAAER,IAAI,CAACS,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,KAAgC,WAAhC,GAA6CX,IAAI,CAACS,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAApE,GAA2E,EALrF;AAME,UAAA,SAAS,EAAGX,IAAI,CAACS,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,KAAgC,WAAhC,GAA6CX,IAAI,CAACS,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAApE,GAA2E,EANzF;AAOE,UAAA,SAAS,EAAEX,IAAI,CAACY,KAAL,CAAW,CAAX,EAAcC,IAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADwB;AAAA,OAA1B,CAHJ,EADD,GAqBC;AAAS,QAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFAFF,CAtBJ,CAPF,CADF,CADF;AAyCD;;;;EA5EgB3C,S;;AA+EnB,IAAM4C,eAAe,GAAG,SAAlBA,eAAkB,CAAA7B,KAAK;AAAA,SAAK;AAChC8B,IAAAA,UAAU,EAAE9B,KAAK,CAAC+B,IAAN,CAAWD,UADS;AAEhCnB,IAAAA,MAAM,EAAEX,KAAK,CAAC+B,IAAN,CAAWpB,MAFa;AAGhCD,IAAAA,KAAK,EAAEV,KAAK,CAAC+B,IAAN,CAAWrB;AAHc,GAAL;AAAA,CAA7B;;AAMA,eAAexB,OAAO,CAAC2C,eAAD,EAAkB;AACtC1C,EAAAA,WAAW,EAAXA,WADsC;AAEtCC,EAAAA,UAAU,EAAVA,UAFsC;AAGtCC,EAAAA,UAAU,EAAVA;AAHsC,CAAlB,CAAP,CAIZI,IAJY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { clearHeroes, findHeroes, findComics } from './actions';\nimport SearchChar from './components/search';\nimport ComicThumbnail from '../../components/comicThumbnail';\nimport Button from '../../components/button';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n      autoCompletTimeout: null,\n    };\n    this.onButtonClick = this.onButtonClick.bind(this);\n\n  }\n\n  autoCompleteOnChange = (value) => {\n    this.setState({ search: value });\n    if (value.length > 2) {\n      if (this.state.autoCompletTimeout) {\n        clearTimeout(this.state.autoCompletTimeout);\n      }\n      const timeout = setTimeout(() => {\n        this.setState({ autoCompletTimeout: null });\n        this.props.findHeroes(value);\n      }, 300);\n      this.setState({ autoCompletTimeout: timeout });\n    }\n  }\n\n  onButtonClick() {//Método utilizado caso haja a necessidade da função de buscar um comics de acordo com seu id\n    this.props.findComics('1011334');//procura comics pelo id\n  }\n\n  onSelectItem = (value, itemSelect) => {\n    this.setState({ search: value });\n    this.props.findComics(String(itemSelect));\n  }\n\n  render() {\n    return (\n      <main>\n        <div className=\"container\">\n          <SearchChar\n            char={this.props.chars}\n            search={this.state.search}\n            autoCompleteOnChange={this.autoCompleteOnChange}\n            onSelectItem={this.onSelectItem}\n          />\n          <div className=\"content\">\n            {this.props.comics ?\n              <section className=\"wrapper-comics\">\n                {\n        console.log(this.props.comics),\n                  this.props.comics.map(item =>\n                    <React.Fragment key={item.id}>\n                      <ComicThumbnail\n                        url={item.urls[0].url}\n                        title={item.title}\n                        thumbnail={item.thumbnail.path + '.' + item.thumbnail.extension}\n                        description={item.description}\n                        writer={item.creators.items[0].name === 'undefined'? item.creators.items[1].name : ''}\n                        penciller={ item.creators.items[1].name === 'undefined'? item.creators.items[1].name : ''}\n                        published={item.dates[0].date}\n                      >\n                      </ComicThumbnail>\n                    </React.Fragment>\n                  )\n                }\n              </section>\n              :\n              <section className=\"wrapper-call\">\n                <h1>FIND THE COMICS OF YOUR FAVORITE SUPERHERO</h1>\n                <h2>typing the name of hero or clicking in start now to show them aleatoring</h2>\n              </section>\n            }\n          </div>\n        </div>\n      </main >\n\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  characters: state.home.characters,\n  comics: state.home.comics,\n  chars: state.home.chars\n});\n\nexport default connect(mapStateToProps, {\n  clearHeroes,\n  findHeroes,\n  findComics\n})(Home);\n"]},"metadata":{},"sourceType":"module"}