{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 23/04/2021.\n    Change on : 03/05/2021.\n    Author     : Michael Dydean\n*/\nimport axios from 'axios';\nimport store from './createStore';\nimport { ON_LOADING, ON_LOADED } from '../globalRedux/types';\n\nvar HttpRequest =\n/*#__PURE__*/\nfunction () {\n  function HttpRequest() {\n    _classCallCheck(this, HttpRequest);\n  }\n\n  _createClass(HttpRequest, [{\n    key: \"Get\",\n    value: function () {\n      var _Get = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(urlApi) {\n        var param,\n            get,\n            result,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                param = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                _context.prev = 1;\n                get = HttpRequest.instance().get(urlApi, param);\n                store.dispatch({\n                  type: ON_LOADING\n                });\n                _context.next = 6;\n                return get;\n\n              case 6:\n                result = _context.sent;\n                store.dispatch({\n                  type: ON_LOADED\n                });\n                return _context.abrupt(\"return\", result);\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n                store.dispatch({\n                  type: ON_LOADED\n                });\n                this.dealWithError(_context.t0);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 11]]);\n      }));\n\n      return function Get(_x) {\n        return _Get.apply(this, arguments);\n      };\n    }()\n  }], [{\n    key: \"instance\",\n    value: function instance() {\n      var instance = axios.create({\n        baseURL: 'https://gateway.marvel.com',\n        params: {\n          //licença de utilização de consumo da API Marvel\n          \"apikey\": \"7e9fee8c0203322e32138d4f01b77b36\",\n          \"limit\": \"100\"\n        },\n        timeout: 10000,\n        method: 'get',\n        responseType: 'json'\n      });\n      return instance;\n    }\n  }]);\n\n  return HttpRequest;\n}();\n\nvar request = new HttpRequest();\nexport var HttpGet =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(urlApi) {\n    var param,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            param = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n            _context2.next = 3;\n            return request.Get(urlApi, param);\n\n          case 3:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function HttpGet(_x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:\\Users\\maico\\Marvel-API-development\\src\\functions\\httpRequest.js"],"names":["axios","store","ON_LOADING","ON_LOADED","HttpRequest","urlApi","param","get","instance","dispatch","type","result","dealWithError","create","baseURL","params","timeout","method","responseType","request","HttpGet","Get"],"mappings":";;;;;AAAA;;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,sBAAtC;;IAEMC,W;;;;;;;;;;;;gDAeQC,M;;;;;;;;;AAAQC,gBAAAA,K,2DAAQ,E;;AAEZC,gBAAAA,G,GAAMH,WAAW,CAACI,QAAZ,GAAuBD,GAAvB,CAA2BF,MAA3B,EAAmCC,KAAnC,C;AACZL,gBAAAA,KAAK,CAACQ,QAAN,CAAe;AAAEC,kBAAAA,IAAI,EAAER;AAAR,iBAAf;;uBACqBK,G;;;AAAfI,gBAAAA,M;AACNV,gBAAAA,KAAK,CAACQ,QAAN,CAAe;AAAEC,kBAAAA,IAAI,EAAEP;AAAR,iBAAf;iDACOQ,M;;;;;AAEPV,gBAAAA,KAAK,CAACQ,QAAN,CAAe;AAAEC,kBAAAA,IAAI,EAAEP;AAAR,iBAAf;AACA,qBAAKS,aAAL;;;;;;;;;;;;;;;;+BAvBU;AACd,UAAMJ,QAAQ,GAAGR,KAAK,CAACa,MAAN,CAAa;AAC1BC,QAAAA,OAAO,EAAE,4BADiB;AAE1BC,QAAAA,MAAM,EAAE;AAAC;AACL,oBAAU,kCADN;AAEJ,mBAAS;AAFL,SAFkB;AAM1BC,QAAAA,OAAO,EAAE,KANiB;AAO1BC,QAAAA,MAAM,EAAE,KAPkB;AAQ1BC,QAAAA,YAAY,EAAE;AARY,OAAb,CAAjB;AAUA,aAAOV,QAAP;AAEH;;;;;;AAeL,IAAIW,OAAO,GAAG,IAAIf,WAAJ,EAAd;AACA,OAAO,IAAMgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOf,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAeC,YAAAA,KAAf,8DAAuB,EAAvB;AAAA;AAAA,mBACNa,OAAO,CAACE,GAAR,CAAYhB,MAAZ,EAAoBC,KAApB,CADM;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPc,OAAO;AAAA;AAAA;AAAA,GAAb","sourcesContent":["/* \n    Name do Projeto : Aplication Comics Marvel\n    Created on : 23/04/2021.\n    Change on : 03/05/2021.\n    Author     : Michael Dydean\n*/\nimport axios from 'axios';\nimport store from './createStore';\nimport { ON_LOADING, ON_LOADED } from '../globalRedux/types';\n\nclass HttpRequest {\n    static instance() {\n        const instance = axios.create({\n            baseURL: 'https://gateway.marvel.com',\n            params: {//licença de utilização de consumo da API Marvel\n                \"apikey\": \"7e9fee8c0203322e32138d4f01b77b36\",\n                \"limit\": \"100\"\n            },\n            timeout: 10000,\n            method: 'get',\n            responseType: 'json'\n        });\n        return instance;\n\n    }\n    async Get(urlApi, param = {}) {\n        try {\n            const get = HttpRequest.instance().get(urlApi, param);\n            store.dispatch({ type: ON_LOADING });\n            const result = await get;\n            store.dispatch({ type: ON_LOADED });\n            return result;\n        } catch (error) {\n            store.dispatch({ type: ON_LOADED });\n            this.dealWithError(error);\n        }\n    }\n}\n\nvar request = new HttpRequest();\nexport const HttpGet = async (urlApi, param = {}) => {\n    return await request.Get(urlApi, param);\n};\n"]},"metadata":{},"sourceType":"module"}