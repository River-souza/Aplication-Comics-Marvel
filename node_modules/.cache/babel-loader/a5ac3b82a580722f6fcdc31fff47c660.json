{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\src\\\\pages\\\\home\\\\index.js\";\nimport React, { Component, useState } from 'react';\nimport Modal from '../../components/modal.js';\nimport '../../components/modal.css';\nimport { connect } from 'react-redux';\nimport { clearHeroes, findHeroes, findComics } from './actions';\nimport FooterHome from './components/footer';\nimport SearchChar from './components/search';\nimport ComicThumbnail, { itemSelected } from '../../components/comicThumbnail';\nimport Button from '../../components/button';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _this.modalState = function () {\n      var _useState = useState(false),\n          _useState2 = _slicedToArray(_useState, 2),\n          isModalVisible = _useState2[0],\n          setIsModalVisible = _useState2[1];\n    };\n\n    _this.autoCompleteOnChange = function (value) {\n      _this.setState({\n        search: value\n      });\n\n      if (value.length > 1) {\n        if (_this.state.autoCompletTimeout) {\n          clearTimeout(_this.state.autoCompletTimeout);\n        }\n\n        var timeout = setTimeout(function () {\n          _this.setState({\n            autoCompletTimeout: null\n          });\n\n          _this.props.findHeroes(value);\n        }, 300);\n\n        _this.setState({\n          autoCompletTimeout: timeout\n        });\n      }\n    };\n\n    _this.onSelectItem = function (value, itemSelect) {\n      _this.setState({\n        search: value\n      });\n\n      _this.props.findComics(String(itemSelect));\n    };\n\n    _this.state = {\n      search: '',\n      autoCompletTimeout: null,\n      itensSelected: []\n    };\n    _this.onButtonClick = _this.onButtonClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"onButtonClick\",\n    value: function onButtonClick() {\n      //Método utilizado caso haja a necessidade da função de buscar um comics de acordo com seu id\n      this.props.findComics('1011334'); //procura comics pelo id\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(SearchChar, {\n        char: this.props.chars,\n        search: this.state.search,\n        autoCompleteOnChange: this.autoCompleteOnChange,\n        onSelectItem: this.onSelectItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.props.comics ? React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"wrapper-comics\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.props.comics.map(function (item) {\n        return React.createElement(React.Fragment, {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(ComicThumbnail, {\n          id: item.id.toString(),\n          url: item.urls[0].url,\n          title: item.title,\n          thumbnail: item.thumbnail.path + '.' + item.thumbnail.extension,\n          description: item.description,\n          writer: item.creators.items[0].name.toString(),\n          penciller: item.creators.items[0].name.toString(),\n          published: item.dates[0].date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }));\n      })), React.createElement(Button, {\n        onClick: null,\n        text: \"Voltar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick(e) {\n          console.log('teste');\n          /*\n          codigo para verificar os itens selecionados\n          para abrir o modal com o mapa\n          */\n        },\n        text: \"Enviar-me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })) : React.createElement(\"section\", {\n        className: \"wrapper-call\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"VEJA OS GIBIS DA MARVEL AQUI!\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Digite o nome do super-her\\xF3i ou t\\xEDtulo no campo de pesquisa acima. \"))), React.createElement(\"div\", {\n        onClick: function onClick() {\n          _this2.modalState.setIsModalVisible(true); // itemSelected(true);\n          //  console.log(url);\n\n          /* alert('\\nTitle : ' + title + '\\n\\nDescription' + description + \n                 '\\n\\nWriter : ' + writer + '\\n\\nPenciller : ' + penciller + '\\n\\nPublished : ' + published);*/\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.modalState.isModalVisible ? React.createElement(Modal, {\n        onClose: function onClose() {\n          return _this2.modalState.setIsModalVisible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"texto\")) : null, \"}} text=\", \"Enviar-me\", \">\")));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    characters: state.home.characters,\n    comics: state.home.comics,\n    chars: state.home.chars\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearHeroes: clearHeroes,\n  findHeroes: findHeroes,\n  findComics: findComics\n})(Home);","map":{"version":3,"sources":["C:\\Users\\maico\\Marvel-API-development\\src\\pages\\home\\index.js"],"names":["React","Component","useState","Modal","connect","clearHeroes","findHeroes","findComics","FooterHome","SearchChar","ComicThumbnail","itemSelected","Button","Home","props","modalState","isModalVisible","setIsModalVisible","autoCompleteOnChange","value","setState","search","length","state","autoCompletTimeout","clearTimeout","timeout","setTimeout","onSelectItem","itemSelect","String","itensSelected","onButtonClick","bind","chars","comics","map","item","id","toString","urls","url","title","thumbnail","path","extension","description","creators","items","name","dates","date","e","console","log","mapStateToProps","characters","home"],"mappings":"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","sourcesContent":["import React, { Component,useState} from 'react';\nimport Modal from '../../components/modal.js';\nimport '../../components/modal.css'\nimport { connect } from 'react-redux';\nimport { clearHeroes, findHeroes, findComics } from './actions';\nimport FooterHome from './components/footer';\nimport SearchChar from './components/search';\nimport ComicThumbnail, {itemSelected} from '../../components/comicThumbnail';\nimport Button from '../../components/button';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n      autoCompletTimeout: null,\n      itensSelected: [],\n    };\n    this.onButtonClick = this.onButtonClick.bind(this);\n\n  }\n\nmodalState = () => {\n const [isModalVisible, setIsModalVisible] = useState(false);\n}\n    \n  autoCompleteOnChange = (value) => {\n    this.setState({ search: value });\n    if (value.length > 1) {\n      if (this.state.autoCompletTimeout) {\n        clearTimeout(this.state.autoCompletTimeout);\n      }\n      const timeout = setTimeout(() => {\n        this.setState({ autoCompletTimeout: null });\n        this.props.findHeroes(value);\n      }, 300);\n      this.setState({ autoCompletTimeout: timeout });\n    }\n  }\n\n  onButtonClick() {//Método utilizado caso haja a necessidade da função de buscar um comics de acordo com seu id\n    this.props.findComics('1011334');//procura comics pelo id\n  }\n\n  onSelectItem = (value, itemSelect) => {\n    this.setState({ search: value });\n    this.props.findComics(String(itemSelect));\n  }\n\n  render() {\n    return (\n      <main>\n        <div className=\"container\">\n          <SearchChar\n            char={this.props.chars}\n            search={this.state.search}\n            autoCompleteOnChange={this.autoCompleteOnChange}\n            onSelectItem={this.onSelectItem}\n          />\n          <div className=\"content\">\n            {this.props.comics ?\n        <section>\n              <section className=\"wrapper-comics\">\n                {\n                  this.props.comics.map(item =>\n                    <React.Fragment key={item.id}>\n                      <ComicThumbnail\n                        id={item.id.toString()}\n                        url={item.urls[0].url}\n                        title={item.title}\n                        thumbnail={item.thumbnail.path + '.' + item.thumbnail.extension}\n                        description={item.description}\n                        writer={item.creators.items[0].name.toString()}\n                        penciller={item.creators.items[0].name.toString()}\n                        published={item.dates[0].date}\n                      >\n                      </ComicThumbnail>\n                    </React.Fragment>\n                  )\n                }\n              </section>\n<Button onClick={null} text={\"Voltar\"}></Button>\n<Button onClick={(e) => {\n                 console.log('teste');\n                 /*\n                 codigo para verificar os itens selecionados\n                 para abrir o modal com o mapa\n                 */\n                }} text={\"Enviar-me\"}></Button>\n</section>\n              :\n              <section className=\"wrapper-call\">\n                <h1>VEJA OS GIBIS DA MARVEL AQUI!</h1>\n                <h2>Digite o nome do super-herói ou título no campo de pesquisa acima. </h2>\n              </section>\n            }\n          </div>\n\n<div onClick={() => {\n                this.modalState.setIsModalVisible(true);\n    \n    \n   // itemSelected(true);\n  //  console.log(url);\n   /* alert('\\nTitle : ' + title + '\\n\\nDescription' + description + \n          '\\n\\nWriter : ' + writer + '\\n\\nPenciller : ' + penciller + '\\n\\nPublished : ' + published);*/\n}}>\n    {\n        this.modalState.isModalVisible ? (\n            <Modal onClose = {\n            () => this.modalState.setIsModalVisible(false)\n            }><h2>texto</h2>\n        </Modal>\n        ) : null\n    }\n                }} text={\"Enviar-me\"}></div>\n        </div>\n      </main >\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  characters: state.home.characters,\n  comics: state.home.comics,\n  chars: state.home.chars\n});\n\nexport default connect(mapStateToProps, {\n  clearHeroes,\n  findHeroes,\n  findComics\n})(Home);\n"]},"metadata":{},"sourceType":"module"}