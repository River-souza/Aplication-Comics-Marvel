{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\src\\\\components\\\\comicThumbnail.js\";\nimport React, { useState } from 'react';\n\nvar ComicThumbnail = function ComicThumbnail(_ref) {\n  var _ref$id = _ref.id,\n      id = _ref$id === void 0 ? '' : _ref$id,\n      _ref$url = _ref.url,\n      url = _ref$url === void 0 ? '' : _ref$url,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? '' : _ref$title,\n      _ref$thumbnail = _ref.thumbnail,\n      thumbnail = _ref$thumbnail === void 0 ? '' : _ref$thumbnail,\n      _ref$description = _ref.description,\n      description = _ref$description === void 0 ? '' : _ref$description,\n      _ref$writer = _ref.writer,\n      writer = _ref$writer === void 0 ? '' : _ref$writer,\n      _ref$penciller = _ref.penciller,\n      penciller = _ref$penciller === void 0 ? '' : _ref$penciller,\n      _ref$published = _ref.published,\n      published = _ref$published === void 0 ? '' : _ref$published;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: id,\n    className: \"thumbnail wrapper\",\n    onClick: function onClick(e) {\n      e.preventDefault();\n      console.log(e.target.name);\n      alert('\\nTitle : ' + title + '\\n\\nDescription' + description + '\\n\\nWriter : ' + writer + '\\n\\nPenciller : ' + penciller + '\\n\\nPublished : ' + published);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"thumbnail-img\",\n    src: thumbnail,\n    alt: thumbnail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"thumbnail-overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"thumbnail-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, title)))), React.createElement(\"div\", {\n    id: \"modal-insert-coords\",\n    class: \"md-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"md-modal-content md-card-4 md-animate-zoom\",\n    style: \"max-width:600px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Informe as coordenadas iniciais do mapa\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onclick: \"document.getElementById('modal-insert-coords').style.display = 'none'\",\n    type: \"button\",\n    class: \"md-button md-red md-margin-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    onclick: \"initMap(); document.getElementById('modal-insert-coords').style.display = 'none'\",\n    type: \"button\",\n    class: \"md-button md-dark-grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Confirmar\"))));\n};\n\nexport default ComicThumbnail;\nexport var itemSelected = function itemSelected(status, id) {\n  return status;\n};","map":{"version":3,"sources":["C:\\Users\\maico\\Marvel-API-development\\src\\components\\comicThumbnail.js"],"names":["React","useState","ComicThumbnail","id","url","title","thumbnail","description","writer","penciller","published","e","preventDefault","console","log","target","name","alert","itemSelected","status"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,qBAAGC,EAAH;AAAA,MAAGA,EAAH,wBAAM,EAAN;AAAA,sBAAUC,GAAV;AAAA,MAAUA,GAAV,yBAAc,EAAd;AAAA,wBAAkBC,KAAlB;AAAA,MAAkBA,KAAlB,2BAAwB,EAAxB;AAAA,4BAA4BC,SAA5B;AAAA,MAA4BA,SAA5B,+BAAsC,EAAtC;AAAA,8BAA0CC,WAA1C;AAAA,MAA0CA,WAA1C,iCAAsD,EAAtD;AAAA,yBAA0DC,MAA1D;AAAA,MAA0DA,MAA1D,4BAAiE,EAAjE;AAAA,4BAAqEC,SAArE;AAAA,MAAqEA,SAArE,+BAA+E,EAA/E;AAAA,4BAAmFC,SAAnF;AAAA,MAAmFA,SAAnF,+BAA6F,EAA7F;AAAA,SACnB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAK,IAAA,EAAE,EAAEP,EAAT;AAAa,IAAA,SAAS,EAAC,mBAAvB;AAA2C,IAAA,OAAO,EAAE,iBAACQ,CAAD,EAAO;AAEhEA,MAAAA,CAAC,CAACC,cAAF;AAEDC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,IAArB;AAIFC,MAAAA,KAAK,CAAC,eAAeZ,KAAf,GAAuB,iBAAvB,GAA2CE,WAA3C,GACG,eADH,GACqBC,MADrB,GAC8B,kBAD9B,GACmDC,SADnD,GAC+D,kBAD/D,GACoFC,SADrF,CAAL;AAEA,KAVQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWG;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,GAAG,EAAEJ,SAApC;AAA+C,IAAA,GAAG,EAAEA,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXH,EAYG;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmC;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCD,KAAlC,CAAnC,CAZH,CADL,GAiBH;AAAK,IAAA,EAAE,EAAC,qBAAR;AAA8B,IAAA,KAAK,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACW;AAAK,IAAA,KAAK,EAAC,4CAAX;AAAwD,IAAA,KAAK,EAAC,iBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAC,uEAAhB;AAAwF,IAAA,IAAI,EAAC,QAA7F;AAAsG,IAAA,KAAK,EAAC,kCAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAQ,IAAA,OAAO,EAAC,kFAAhB;AAAmG,IAAA,IAAI,EAAC,QAAxG;AAAiH,IAAA,KAAK,EAAC,wBAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CAHR,CADX,CAlBsB;AAAA,CAAvB;;AA+BA,eAAeH,cAAf;AAGA,OAAO,IAAMgB,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAShB,EAAT,EAAgB;AAExC,SAAOgB,MAAP;AACH,CAHM","sourcesContent":["import React, {useState} from 'react';\n\nconst ComicThumbnail = ({ id='', url='', title='', thumbnail='', description='', writer='', penciller='', published='' }) => (\n    <React.Fragment>\n         <div id={id} className=\"thumbnail wrapper\" onClick={(e) => {\n    \n    e.preventDefault();\n    \n   console.log(e.target.name);\n    \n    \n    \n alert('\\nTitle : ' + title + '\\n\\nDescription' + description + \n          '\\n\\nWriter : ' + writer + '\\n\\nPenciller : ' + penciller + '\\n\\nPublished : ' + published);\n}}>\n            <img className=\"thumbnail-img\" src={thumbnail} alt={thumbnail}/>\n            <div className=\"thumbnail-overlay\"><span className=\"thumbnail-text\">{title}</span>\n            </div>\n        </div>\n    </React.Fragment>,\n <div id=\"modal-insert-coords\" class=\"md-modal\">\n            <div class=\"md-modal-content md-card-4 md-animate-zoom\" style=\"max-width:600px\">\n                <h1>Informe as coordenadas iniciais do mapa</h1>\n                <p></p>\n                    <div>\n                        <button onclick=\"document.getElementById('modal-insert-coords').style.display = 'none'\" type=\"button\" class=\"md-button md-red md-margin-right\">Cancel</button>\n                        <button onclick=\"initMap(); document.getElementById('modal-insert-coords').style.display = 'none'\" type=\"button\" class=\"md-button md-dark-grey\">Confirmar</button>\n                    </div>\n            </div>\n        </div>\n\n);\n\nexport default ComicThumbnail;\n\n\nexport const itemSelected = (status, id) => {\n    \n    return status;\n};"]},"metadata":{},"sourceType":"module"}