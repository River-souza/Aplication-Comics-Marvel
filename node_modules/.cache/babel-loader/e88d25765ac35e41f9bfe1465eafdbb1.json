{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maico\\\\Marvel-API-development\\\\src\\\\components\\\\comicThumbnail.js\";\nimport React, { useState } from 'react';\nimport { Confirm } from 'react-st-modal';\n\nvar ComicThumbnail = function ComicThumbnail(_ref) {\n  var _ref$id = _ref.id,\n      id = _ref$id === void 0 ? '' : _ref$id,\n      _ref$url = _ref.url,\n      url = _ref$url === void 0 ? '' : _ref$url,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? '' : _ref$title,\n      _ref$thumbnail = _ref.thumbnail,\n      thumbnail = _ref$thumbnail === void 0 ? '' : _ref$thumbnail,\n      _ref$description = _ref.description,\n      description = _ref$description === void 0 ? '' : _ref$description,\n      _ref$writer = _ref.writer,\n      writer = _ref$writer === void 0 ? '' : _ref$writer,\n      _ref$penciller = _ref.penciller,\n      penciller = _ref$penciller === void 0 ? '' : _ref$penciller,\n      _ref$published = _ref.published,\n      published = _ref$published === void 0 ? '' : _ref$published;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, \"/* \", React.createElement(\"div\", {\n    id: id,\n    className: \"thumbnail wrapper\",\n    onClick: function onClick(e) {\n      e.preventDefault();\n      console.log(e.target.name);\n      alert('\\nTitle : ' + title + '\\n\\nDescription' + description + '\\n\\nWriter : ' + writer + '\\n\\nPenciller : ' + penciller + '\\n\\nPublished : ' + published);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"thumbnail-img\",\n    src: thumbnail,\n    alt: thumbnail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"thumbnail-overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"thumbnail-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, title))), \"*/\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      var result = await Confirm('Сonfirmation text', 'Сonfirmation title');\n\n      if (result) {// Сonfirmation confirmed\n      } else {// Сonfirmation not confirmed\n        }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Show confirm\")));\n};\n\nexport default ComicThumbnail;\nexport var itemSelected = function itemSelected(status, id) {\n  return status;\n};","map":{"version":3,"sources":["C:\\Users\\maico\\Marvel-API-development\\src\\components\\comicThumbnail.js"],"names":["React","useState","Confirm","ComicThumbnail","id","url","title","thumbnail","description","writer","penciller","published","e","preventDefault","console","log","target","name","alert","result","itemSelected","status"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,qBAAGC,EAAH;AAAA,MAAGA,EAAH,wBAAM,EAAN;AAAA,sBAAUC,GAAV;AAAA,MAAUA,GAAV,yBAAc,EAAd;AAAA,wBAAkBC,KAAlB;AAAA,MAAkBA,KAAlB,2BAAwB,EAAxB;AAAA,4BAA4BC,SAA5B;AAAA,MAA4BA,SAA5B,+BAAsC,EAAtC;AAAA,8BAA0CC,WAA1C;AAAA,MAA0CA,WAA1C,iCAAsD,EAAtD;AAAA,yBAA0DC,MAA1D;AAAA,MAA0DA,MAA1D,4BAAiE,EAAjE;AAAA,4BAAqEC,SAArE;AAAA,MAAqEA,SAArE,+BAA+E,EAA/E;AAAA,4BAAmFC,SAAnF;AAAA,MAAmFA,SAAnF,+BAA6F,EAA7F;AAAA,SACnB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACO;AAAK,IAAA,EAAE,EAAEP,EAAT;AAAa,IAAA,SAAS,EAAC,mBAAvB;AAA2C,IAAA,OAAO,EAAE,iBAACQ,CAAD,EAAO;AAElEA,MAAAA,CAAC,CAACC,cAAF;AAEDC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,IAArB;AAEFC,MAAAA,KAAK,CAAC,eAAeZ,KAAf,GAAuB,iBAAvB,GAA2CE,WAA3C,GACG,eADH,GACqBC,MADrB,GAC8B,kBAD9B,GACmDC,SADnD,GAC+D,kBAD/D,GACoFC,SADrF,CAAL;AAEA,KARU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASC;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,GAAG,EAAEJ,SAApC;AAA+C,IAAA,GAAG,EAAEA,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,EAUC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmC;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCD,KAAlC,CAAnC,CAVD,CADP,QAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAMa,MAAM,GAAG,MAAMjB,OAAO,CAAC,mBAAD,EAC1B,oBAD0B,CAA5B;;AAGA,UAAIiB,MAAJ,EAAY,CACV;AACD,OAFD,MAEO,CACL;AACD;AACF,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAdA,CADmB;AAAA,CAAvB;;AAkCA,eAAehB,cAAf;AAEA,OAAO,IAAMiB,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAASjB,EAAT,EAAgB;AAExC,SAAOiB,MAAP;AACH,CAHM","sourcesContent":["import React, {useState} from 'react';\nimport { Confirm } from 'react-st-modal';\n\nconst ComicThumbnail = ({ id='', url='', title='', thumbnail='', description='', writer='', penciller='', published='' }) => (\n    <React.Fragment>\n        /* <div id={id} className=\"thumbnail wrapper\" onClick={(e) => {\n    \n    e.preventDefault();\n    \n   console.log(e.target.name);\n      \n alert('\\nTitle : ' + title + '\\n\\nDescription' + description + \n          '\\n\\nWriter : ' + writer + '\\n\\nPenciller : ' + penciller + '\\n\\nPublished : ' + published);\n}}>\n            <img className=\"thumbnail-img\" src={thumbnail} alt={thumbnail}/>\n            <div className=\"thumbnail-overlay\"><span className=\"thumbnail-text\">{title}</span>\n            </div>\n        </div>*/\n    <div>\n      <button\n        onClick={() => {\n          const result = await Confirm('Сonfirmation text', \n            'Сonfirmation title');\n          \n          if (result) {\n            // Сonfirmation confirmed\n          } else {\n            // Сonfirmation not confirmed\n          }\n        }}\n      >\n          Show confirm\n      </button>\n    </div>\n    </React.Fragment>\n);\n\nexport default ComicThumbnail;\n\nexport const itemSelected = (status, id) => {\n    \n    return status;\n};"]},"metadata":{},"sourceType":"module"}