{"ast":null,"code":"import { ON_MARVEL_CHAR_CHANGED, ON_MARVEL_CHARS_LOADED } from './types';\nimport { HttpGet } from \"../../functions/httpRequest\";\nexport var findHeroes = function findHeroes(searchString) {\n  return function (dispatch) {\n    HttpGet('/v1/public/characters?nameStartsWith=' + searchString).then(function (result) {\n      if (result.status === 200) {\n        dispatch({\n          type: ON_MARVEL_CHARS_LOADED,\n          payload: result.data.data.results\n        });\n      }\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};\nexport var clearHeroes = function clearHeroes() {\n  return {\n    type: ON_MARVEL_CHARS_LOADED,\n    payload: []\n  };\n};\nexport var findComics = function findComics(char) {\n  return function (dispatch) {\n    if (char.length) {\n      var characterId;\n\n      if (typeof char === \"string\") {\n        characterId = parseInt(char);\n      } else {\n        characterId = char[0].id;\n      }\n\n      HttpGet('/v1/public/characters/' + characterId + '/comics?hasDigitalIssue=true&limit=10').then(function (result) {\n        if (result.status === 200 && result.data.data.results.length >= 1) {\n          dispatch({\n            type: ON_MARVEL_CHAR_CHANGED,\n            payload: result.data.data.results\n          });\n        }\n      }).catch(function (error) {\n        dispatch(console.log(error));\n      });\n    }\n\n    ;\n  };\n};","map":{"version":3,"sources":["C:\\Users\\maico\\Marvel-API-development\\src\\pages\\home\\actions.js"],"names":["ON_MARVEL_CHAR_CHANGED","ON_MARVEL_CHARS_LOADED","HttpGet","findHeroes","searchString","dispatch","then","result","status","type","payload","data","results","catch","error","console","log","clearHeroes","findComics","char","length","characterId","parseInt","id"],"mappings":"AAAA,SAASA,sBAAT,EAAiCC,sBAAjC,QAA+D,SAA/D;AACA,SAASC,OAAT,QAAwB,6BAAxB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAAkB;AACxC,SAAO,UAAAC,QAAQ,EAAI;AACfH,IAAAA,OAAO,CAAC,0CAA0CE,YAA3C,CAAP,CACKE,IADL,CACU,UAAAC,MAAM,EAAI;AACZ,UAAIA,MAAM,CAACC,MAAP,KAAkB,GAAtB,EAA2B;AACvBH,QAAAA,QAAQ,CAAC;AACLI,UAAAA,IAAI,EAAER,sBADD;AAELS,UAAAA,OAAO,EAAEH,MAAM,CAACI,IAAP,CAAYA,IAAZ,CAAiBC;AAFrB,SAAD,CAAR;AAIH;AACJ,KARL,EASKC,KATL,CASW,UAAAC,KAAK;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,KAThB;AAUH,GAXD;AAYH,CAbM;AAeP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC7B,SAAO;AACHR,IAAAA,IAAI,EAAER,sBADH;AAEHS,IAAAA,OAAO,EAAE;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAChC,SAAO,UAAAd,QAAQ,EAAI;AACf,QAAIc,IAAI,CAACC,MAAT,EAAiB;AACb,UAAIC,WAAJ;;AACA,UAAI,OAAOF,IAAP,KAAgB,QAApB,EAA8B;AAC1BE,QAAAA,WAAW,GAAGC,QAAQ,CAACH,IAAD,CAAtB;AACH,OAFD,MAEO;AACHE,QAAAA,WAAW,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQI,EAAtB;AACH;;AACDrB,MAAAA,OAAO,CAAC,2BAA2BmB,WAA3B,GAAyC,uCAA1C,CAAP,CACKf,IADL,CACU,UAAAC,MAAM,EAAI;AACZ,YAAIA,MAAM,CAACC,MAAP,KAAkB,GAAlB,IAAyBD,MAAM,CAACI,IAAP,CAAYA,IAAZ,CAAiBC,OAAjB,CAAyBQ,MAAzB,IAAmC,CAAhE,EAAmE;AAC/Df,UAAAA,QAAQ,CAAC;AACLI,YAAAA,IAAI,EAAET,sBADD;AAELU,YAAAA,OAAO,EAAEH,MAAM,CAACI,IAAP,CAAYA,IAAZ,CAAiBC;AAFrB,WAAD,CAAR;AAIH;AACJ,OARL,EASKC,KATL,CASW,UAACC,KAAD,EAAW;AACdT,QAAAA,QAAQ,CAACU,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAD,CAAR;AACH,OAXL;AAYH;;AAAA;AACJ,GArBD;AAsBH,CAvBM","sourcesContent":["import { ON_MARVEL_CHAR_CHANGED, ON_MARVEL_CHARS_LOADED } from './types';\nimport { HttpGet } from \"../../functions/httpRequest\";\n\nexport const findHeroes = (searchString) => {\n    return dispatch => {\n        HttpGet('/v1/public/characters?nameStartsWith=' + searchString)\n            .then(result => {\n                if (result.status === 200) {\n                    dispatch({\n                        type: ON_MARVEL_CHARS_LOADED,\n                        payload: result.data.data.results\n                    });\n                }\n            })\n            .catch(error => console.log(error));\n    };\n};\n\nexport const clearHeroes = () => {\n    return {\n        type: ON_MARVEL_CHARS_LOADED,\n        payload: []\n    };\n};\n\nexport const findComics = (char) => {\n    return dispatch => {\n        if (char.length) {\n            var characterId;\n            if (typeof char === \"string\") {\n                characterId = parseInt(char)\n            } else {\n                characterId = char[0].id;\n            }\n            HttpGet('/v1/public/characters/' + characterId + '/comics?hasDigitalIssue=true&limit=10')\n                .then(result => {\n                    if (result.status === 200 && result.data.data.results.length >= 1) {\n                        dispatch({\n                            type: ON_MARVEL_CHAR_CHANGED,\n                            payload: result.data.data.results\n                        });\n                    }\n                })\n                .catch((error) => {\n                    dispatch(console.log(error));\n                });\n        };\n    }\n};"]},"metadata":{},"sourceType":"module"}